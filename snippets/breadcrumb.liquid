{% comment %}
  Renders the breadcrumb.
  Documentation - https://github.com/ergophobe/shopify-breadcrumbs
 
  Notes:
  This generates breadcrumbs using two ways:
  1) Collection & Product breadcrumbs can be manually assigned by editing the "Breadcrumbs" metafield
  2) Collection & Product breadcrumbs are also automatically generated based on the "Breadcrumbs" menu: https://admin.shopify.com/store/denali-electronics/menus/205756137656
  Keep in mind that the all items in the menu should be linked to a collection. Please also avoid duplicate entries including the menu item's title and where it's linked to.
  The second approach should cover most if not all products, but is not always accurate. In that case, refer to the first approach.
  
{% endcomment %}

{% comment %}Manual i.e. metafields breadcrumbs{% endcomment %}
{%- if request.page_type == 'product' and product.metafields.navigation.breadcrumbs -%}
  {%- assign metafield = product.metafields.navigation.breadcrumbs.value -%}
  {%- assign resource = product -%}
  {%- assign metafield_breadcrumbs = true %}
{%- elsif request.page_type == 'collection' and collection.metafields.navigation.breadcrumbs -%}
  {%- assign metafield = collection.metafields.navigation.breadcrumbs.value -%}
  {%- assign resource = collection -%}
  {%- assign metafield_breadcrumbs = true %}
{%- endif -%}
{%- if metafield_breadcrumbs == true -%}

<div id="breadcrumb" class="desktop-12">
  <a href="/" class="homepage-link" title="{{ 'general.breadcrumbs.home' | t }}">{{ 'general.breadcrumbs.home' | t }}</a>
  <span class="separator">&raquo;</span>
  {% for breadcrumb_item in metafield %}
  <a href="{{- breadcrumb_item.url -}}" title="{{- breadcrumb_item.title -}}">{{- breadcrumb_item.title -}}</a>
  {% unless forloop.last %}<span class="separator">&raquo;</span>{% endunless %}
  {% endfor %}
</div>
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "BreadcrumbList",
      "itemListElement": [
          {
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "{{ shop.url }}",
              "name": {{ 'general.breadcrumbs.home' | t | json }}
            }
          },
          {%- assign last_pos = 1 -%}
          {%- for breadcrumb_item in metafield -%}
            {
              "@type": "ListItem",
              "position": {{ forloop.index | plus: 1 }},
              "item": {
                "@id": "{{shop.url | append: "/collections/" | append: breadcrumb_item.handle }}",
                "name": {{ breadcrumb_item.title | json }}
              }
            },
            {%- assign last_pos = forloop.index -%}
          {%- endfor -%}
          {
            "@type": "ListItem",
            "position": {{ last_pos | plus: 2 }},
            "item": {
              "@id": "{{ shop.url }}{{ resource.url }}",
              "name": {{ resource.title | json }}
            }
          }
      ]
    }
  </script>
{% else %}

{% comment %}Automated i.e. navigation menu breadcrumbs{% endcomment %}
<div id="breadcrumb" class="desktop-12">
  <a href="/" class="homepage-link" title="{{ 'general.breadcrumbs.home' | t }}">{{ 'general.breadcrumbs.home' | t }}</a>
  {% comment %} DETERMINE OBJECT TYPE - product, collection or page   {% endcomment %}
   
{%- if request.page_type == 'product' -%}
  {%- capture product_url_string -%}{%- for collection in product.collections -%}{{collection.url }}|{%- endfor -%}{%- endcapture -%}
  {%- assign object_url_string = product_url_string | append: product.url -%}
{%- elsif request.page_type == 'collection' and collection.handle -%}
  {%- capture object_url_string -%}/collections/{{ collection.handle }}{%- endcapture -%}
{%- elsif request.page_type == 'page' -%}
  {%- capture object_url_string -%}/pages/{{ page.url }}{%- endcapture -%}
{% endif %}
 
{%- assign object_urls = object_url_string | split: '|' -%}
 
  {% comment %} 
  GET TITLES OF ALL LINKLISTS
  Linklist is the Shopify term for a menu or submenu. We grab all the titles so we can match against them and
  find out if they are linked from a parent menu.
  {% endcomment %}    
{%- capture linklist_titles_str -%}
{%- for link in linklists.breadcrumbs.links -%}
  {%- if link.type == 'collection_link' -%}
    {{- link.title | handleize -}}|
    {%- assign child_linklist = linklists[link.handle].links -%}
    {%- if child_linklist -%}
      {%- for child_link in child_linklist -%}
      {%- if child_link.type == 'collection_link' -%}
        {{- child_link.title | handleize -}}|
      {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
  {%- endif -%}
{%- endfor -%}
{%- endcapture -%}
{%- assign str_size = linklist_titles_str | size | minus: 1 -%}
{%- assign linklist_titles_str = linklist_titles_str | slice: 0, str_size -%}
{%- assign linklist_titles = linklist_titles_str | split: '|' -%}

  {% comment %} 
  GET TOP LEVEL MENU THEN DRILL DOWN
  First we grab all the top-level menu items and we create a set of strings for each property, which 
  we will eventually split into arrays. We cannot create multi-dimensional arrays in Liquid, but we 
  can create parallel arrays so that if we know the index in the handle array, we can find it's title
  by iterating through the title array until we hit the same index.
   
  If the link handle matches a string in the linklist_titles, the list with that title is the child.
  You might think we would match handles to handles, but we don't. Shopify creates nested menus based
  on the parent item having the exact same label as the child item and converts that to a handle.
  {% endcomment %}
 
{%- assign level = 1 -%}
{%- for link in linklists.breadcrumbs.links -%}
  {%- assign link_handle = link.title | handleize -%}
  {%- assign link_titles = link_titles | append: link.title | append: '|' -%}
  {%- assign link_urls = link_urls | append: link.url | append: '|' -%}
  {%- assign link_levels = link_levels | append: level | append: '|'  -%}
  {%- assign link_parents = link_parents | append: 'breadcrumbs' | append: '|'  -%}
  {%- assign link_handles = link_handles | append: link_handle | append: '|' -%}
  {%- if linklist_titles contains link_handle -%}
 
    {% comment %} GET CHILDREN {% endcomment %}
    {%- for clink in linklists[link_handle].links -%}
      {%- if forloop.first == true -%}
        {%- assign level = level | plus: 1 -%}
      {%- endif -%}
      {% assign clink_handle = clink.title | handleize %}
      {%- assign link_titles = link_titles | append: clink.title | append: '|' -%}
      {%- assign link_urls = link_urls | append: clink.url | append: '|' -%}
      {%- assign link_levels = link_levels | append: level | append: '|'  -%}
      {%- assign link_parents = link_parents | append: link_handle | append: '|'  -%}
      {%- assign link_handles = link_handles | append: clink_handle | append: '|' -%}
 
      {%- if linklist_titles contains clink_handle -%}
 
            {% comment %} GET GRANDCHILDREN {% endcomment %}
            {%- for gclink in linklists[clink_handle].links -%}
              {%- if forloop.first == true -%}
                {%- assign level = level | plus: 1 -%}
              {%- endif -%}
              {% assign gclink_handle = gclink.title | handleize %}
              {%- assign link_titles = link_titles | append: gclink.title | append: '|' -%}
              {%- assign link_urls = link_urls | append: gclink.url | append: '|' -%}
              {%- assign link_levels = link_levels | append: level | append: '|'  -%}
              {%- assign link_parents = link_parents | append: clink_handle | append: '|'  -%}
              {%- assign link_handles = link_handles | append: gclink_handle | append: '|' -%}
 
              {%- if forloop.last == true -%}
                {%- assign level = level | minus: 1 -%}
              {%- endif -%}
            {%- endfor -%}
            {% comment %} END GRANDCHILDREN {% endcomment %}
 
      {%- endif -%}
      {%- if forloop.last == true -%}
        {%- assign level = level | minus: 1 -%}
      {%- endif -%}
    {%- endfor -%}
    {% comment %} END CHILDREN  {% endcomment %}
    
  {%- endif -%}
{%- endfor -%}
 
{%- comment -%} CONVERT TO ARRAYS {%- endcomment -%}
{%- assign str_size = link_levels | size | minus: 1 -%}
{%- assign llevels = link_levels | slice: 0, str_size | split: '|' -%}

{%- assign str_size = link_titles | size | minus: 1 -%}
{%- assign ltitles = link_titles | slice: 0, str_size | split: '|' -%}

{%- assign str_size = link_handles | size | minus: 1 -%}
{%- assign lhandles = link_handles | slice: 0, str_size | split: '|' -%}
 
{%- assign str_size = link_parents | size | minus: 1 -%}
{%- assign lparents = link_parents | slice: 0, str_size | split: '|' -%}
 
{%- assign str_size = link_urls | size | minus: 1 -%}
{%- assign lurls = link_urls | slice: 0, str_size | split: '|' -%}

{%- comment -%} GET THE DEEPEST LEVEL WE FOUND {%- endcomment -%}
{%- assign depth = '3' -%}
{%- assign bc3_parent_list_handle = '' %}
 
{%- comment -%} LEVEL 3: THREE DOWN FROM THE TOP {%- endcomment -%}
{%- comment -%} Do we have a link to this product or its collection on the deepest level? {%- endcomment -%}
{%- for url in lurls -%}
  {%- if object_urls contains url and llevels[forloop.index0] == depth -%}
    {%- unless url == product.url or url == collection.url -%}
      {%- capture bc3 -%}{{ ltitles[forloop.index0] | link_to: url, ltitles[forloop.index0] }}{%- endcapture -%}
      {%- capture bc3_title -%}{{ ltitles[forloop.index0] }}{%- endcapture -%}
      {%- capture bc3_link -%}{{ shop.url }}{{ url }}{%- endcapture -%}
    {%- endunless -%}
    {%- assign bc3_parent_list_handle = lparents[forloop.index0] -%}
    {% break %}
  {%- endif -%}
{%- endfor -%}
 
{%- comment -%} LEVEL 2: TWO DOWN FROM THE TOP
  Next level. If we found something, we can save a lot of processing. Otherwise, 
  we need to scan everything on this level 
{%- endcomment -%}
{%- assign depth = '2' -%}
{%- assign bc2_parent_list_handle = '' %}
 
{%- comment -%} IF we didn't find anything on the deepest level, we start from scratch one level up {%- endcomment -%}
{%- if bc3_parent_list_handle == '' -%} 
  {%- for url in lurls -%}
    {%- if llevels[forloop.index0] == depth -%}
      {%- if object_urls contains url -%} 
        {%- unless url == product.url or url == collection.url -%}
          {%- capture bc2 -%}{{ ltitles[forloop.index0] | link_to: url, ltitles[forloop.index0] }}{%- endcapture -%}
          {%- capture bc2_title -%}{{ ltitles[forloop.index0] }}{%- endcapture -%}
          {%- capture bc2_link -%}{{ shop.url }}{{ url }}{%- endcapture -%}
        {% endunless %}
        {%- assign bc2_parent_list_handle = lparents[forloop.index0] -%}
        {%- break -%}
      {%- endif -%}
    {%- endif -%}
  {%- endfor -%}
   
{%- comment -%} ELSE we have a parent handle. We need its array index to find its other data {%- endcomment -%}  
{%- else -%}
  {%- for list_handle in lhandles -%}
    {%- if list_handle == bc3_parent_list_handle -%}
      {% assign bc2_list_handle = list_handle %}
      {%- assign bc2_parent_list_handle = lparents[forloop.index0] -%}
      {%- assign bc2_index = -1 -%}
      {% for bc2_breadcrumbs_link in linklists.breadcrumbs.links %}
        {% assign bc2_index = bc2_index | plus: 1 %}
        {% if bc2_breadcrumbs_link.handle == bc2_parent_list_handle %}
        {%- for bc2_sibling_link in linklists.breadcrumbs.links[bc2_index].links -%}
          {%- assign bc2_sibling_title_handleized = bc2_sibling_link.title | handleize -%}
          {% if bc2_sibling_title_handleized == bc2_list_handle %}
            {%- capture bc2 -%}{{ bc2_sibling_link.title | link_to: bc2_sibling_link.url, bc2_sibling_link.title }}{%- endcapture -%}
            {%- capture bc2_title -%}{{ bc2_sibling_link.title }}{%- endcapture -%}
            {%- capture bc2_link -%}{{ shop.url }}{{ bc2_sibling_link.url }}{%- endcapture -%}
            {% break %}
          {%- endif -%}
        {%- endfor -%}
        {% endif %}
      {%- endfor -%}
      {% break %}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

{%- comment -%} LEVEL 1: MAIN ITEMS BELOW MAIN MENU (I.E. TOP NAV BAR) {%- endcomment -%}
 
{%- assign depth = depth | minus: 1 | append: '' -%}
{%- assign bc1_parent_list_handle = '' %}

{%- comment -%} IF we didn't find anything on deepest level or middle level, we start from scratch on top level {%- endcomment -%}
{%- if bc2_parent_list_handle == '' -%} 
  {% for url in lurls %}
    {%- if object_urls contains url and llevels[forloop.index0] == depth -%}
      {%- unless url == product.url or url == collection.url -%}
        {%- capture bc1 -%}{{ ltitles[forloop.index0] | link_to: url, ltitles[forloop.index0] }}{%- endcapture -%}
        {%- capture bc1_title -%}{{ ltitles[forloop.index0] }}{%- endcapture -%}
        {%- capture bc1_link -%}{{ shop.url }}{{ url }}{%- endcapture -%}
      {% endunless %}
      {%- assign bc1_parent_list_handle = lparents[forloop.index0] -%}
      {%- break -%}
    {%- endif -%}
  {%- endfor -%}
 
{%- comment -%} ELSE we have a parent handle. We need its array index to find its other data {%- endcomment -%}
{%- else -%}
  {%- for list_handle in lhandles -%}
    {%- if bc2_parent_list_handle == list_handle -%}
      {% assign bc1_list_handle = list_handle %}
      {%- assign bc1_parent_list_handle = lparents[forloop.index0] -%}
      {%- assign bc1_title = ltitles[forloop.index0] -%}
      {%- comment -%} 
        We HAVE PARENT, so now we GET THE SIBLING links, find where title 
        matches parent title, then we have the collection URL
      {%- endcomment -%}
      {%- for bc1_sibling_link in linklists[bc1_parent_list_handle].links -%}
        {%- assign bc1_sibling_title_handleized = bc1_sibling_link.title | handleize -%}
        {% if bc1_sibling_title_handleized == bc1_list_handle %}
          {%- capture bc1 -%}{{ bc1_sibling_link.title | link_to: bc1_sibling_link.url, bc1_sibling_link.title }}{%- endcapture -%}
          {%- capture bc1_title -%}{{ bc1_sibling_link.title }}{%- endcapture -%}
          {%- capture bc1_link -%}{{ shop.url }}{{ bc1_sibling_link.url }}{%- endcapture -%}
          {% break %}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}
  {% if bc1 and bc1_link != shop.url %}
     <span class="separator">&raquo;</span> 
    {{ bc1 }}
  {% endif %}
  {% if bc2 and bc2_link != shop.url %}
     <span class="separator">&raquo;</span> 
    {{ bc2  }}
  {% endif %}
  {% if bc3 and bc3_link != shop.url %}
     <span class="separator">&raquo;</span> 
    {{ bc3 }}
  {% endif %}
{% if request.page_type == 'product' %}
  <span class="visually-hidden" aria-hidden="true">></span> 
  <span class="visually-hidden">{{ product.title }}</span>
 
{% elsif request.page_type == 'collection' and collection.handle %}
    <span class="visually-hidden" aria-hidden="true">></span> 
    <span class="visually-hidden" >{{ collection.title | default: "Collection" }}</span>
 
{% elsif request.page_type == 'blog' %}
  <span class="separator">&raquo;</span> 
  {%- if current_tags -%}
    {{ blog.title | link_to: blog.url }}
    <span>{{ current_tags | join: " + " }}</span>
  {%- else -%}
  <span>{{ blog.title }}</span>
  {%- endif -%}
 
{% elsif request.page_type == 'article' %}
  <span class="separator">&raquo;</span> 
  {{ blog.title | link_to: blog.url }}
  <div class="visually-hidden"><span class="separator">&raquo;</span> 
  <span>{{ article.title }}</span></div>
 
{% elsif request.page_type == 'page' %}
  <span class="separator">&raquo;</span> 
  <span>{{ page.title }}</span>
 
{% else %}
  <span class="separator">&raquo;</span> 
  <span>{{ page_title | default: "Page" }}</span>
 
{% endif %}
</div>

{% unless request.page_type == "search" %}
<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "item": {
        "@id": "{{ shop.url }}",
        "name": {{ 'general.breadcrumbs.home' | t | json }}
      }
    }
    {%- assign position = 2 -%}
    {%- if bc1 and bc1_link != shop.url -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": {{ bc1_link | json }},
        "name": {{ bc1_title | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- endif -%}
    {%- if bc2 and bc2_link != shop.url -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": {{ bc2_link | json }},
        "name": {{ bc2_title | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- endif -%}
    {%- if bc3 and bc3_link != shop.url -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": {{ bc3_link | json }},
        "name": {{ bc3_title | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- endif -%}
    {%- if request.page_type == 'product' -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position | json }},
      "item": {
        "@id": "{{ shop.url }}{{ product.url }}", 
        "name": {{ product.title | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- elsif request.page_type == 'collection' and collection.handle -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": "{{ shop.url }}{{ collection.url }}", 
        "name": {{ collection.title | default: "Collection" | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- elsif request.page_type == 'blog' -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": "{{ shop.url }}{{ blog.url }}", 
        "name": {{ blog.title | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- if current_tags -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": "{{ shop.url }}{{ blog.url }}",
        "name": {{ current_tags | join: ' + ' | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- endif -%}
    {%- elsif request.page_type == 'article' -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": "{{ shop.url }}{{ blog.url }}", 
        "name": {{ blog.title | json }}
      }
    },
    {%- assign position = position | plus: 1 -%}
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": "{{ shop.url }}{{ article.url }}", 
        "name": {{ article.title | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- elsif request.page_type == 'page' -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": "{{ shop.url }}{{ page.url }}", 
        "name": {{ page.title | default: "Page" | json }}
      }
    }
    {%- assign position = position | plus: 1 -%}
    {%- else -%}
    ,
    {
      "@type": "ListItem",
      "position": {{ position }},
      "item": {
        "@id": "{{ shop.url }}{{ page.url }}", 
        "name": {{ page_title | json }}
      }
    }
    {%- endif -%}
  ]
}
</script>
{% endunless %}
{% endif %}

{% comment %}
<div id="breadcrumb" class="desktop-12">
  <a href="/" class="homepage-link" title="{{ 'general.breadcrumbs.home' | t }}">{{ 'general.breadcrumbs.home' | t }}</a>
  {% if template contains "product" %}
    {% if collection %}
      <span class="separator">&raquo;</span>
      {% if collection.handle %}
        {% capture url %}/collections/{{ collection.handle }}{% endcapture %}
        {{ collection.title | link_to: url }}
      {% elsif collection.all_products_count > 0 and collection.products.first.type == collection.title %}
        {{ collection.title | link_to_type }}
      {% elsif collection.all_products_count > 0 and collection.products.first.vendor == collection.title %}
        {{ collection.title | link_to_vendor }}
      {% endif %}
    {% else %}
      <span class="separator">&raquo;</span>
      {{ product.type | link_to_type }}
    {% endif %}

    <span class="separator">&raquo;</span>
    <span class="page-title">{{ page_title }}</span>
  {% elsif template == "article" %}
    <span class="separator">&raquo;</span>
    {{ blog.title | link_to: blog.url }}
    <span class="separator">&raquo;</span>
    <span class="page-title">{{ page_title }}</span>
  {% elsif template contains "collection" %}
    {% if current_tags.size > 0 %}
      <span class="separator">&raquo;</span>
      {{ collection.title | link_to: collection.url }}
      <span class="separator">&raquo;</span>
      <span class="page-title">{{ current_tags.first }}</span>
    {% else %}
      <span class="separator">&raquo;</span>
      <span class="page-title">{{ collection.title }}</span>
    {% endif %}
  {% else %}
    <span class="separator">&raquo;</span>
    <span class="page-title">{{ page_title }}</span>
  {% endif %}
</div>
{% endcomment %}
<div class="clear"></div>